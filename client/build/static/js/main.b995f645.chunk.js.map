{"version":3,"sources":["components/JoinBlock.js","socket.js","components/Chat.js","reducer.js","App.js","index.js"],"names":["JoinBlock","onLogin","useState","userName","setUserName","roomId","setRoomId","isLoading","setIsLoading","onLoginClick","a","alert","obj","axios","post","data","status","className","type","placeholder","value","onChange","e","target","onClick","disabled","socket","io","Chat","users","messages","addMessage","textValue","setTextValue","messageRef","useRef","useEffect","current","scrollTo","onSendMessage","emit","text","length","map","user","index","name","key","ref","message","onKeyPress","event","state","action","joined","payload","App","useReducer","reducer","dispatch","get","console","log","on","setUsers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b995f645.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst JoinBlock = ({onLogin}) => {\r\n    const [userName, setUserName] = useState('')\r\n    const [roomId, setRoomId] = useState('')\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const onLoginClick = async () => {\r\n        if (!roomId || !userName) {\r\n            return alert('Неверные данные!')\r\n        }\r\n        const obj = {\r\n            roomId,\r\n            userName\r\n        }\r\n        setIsLoading(true)\r\n        const {data} = await axios.post('/rooms', obj)\r\n        if (data.status == 'error') {\r\n            setIsLoading(false)\r\n            return alert('Пользователь с таким именем уже существует')\r\n        } else {\r\n            onLogin(obj)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"join-block\">\r\n            <input type=\"text\" placeholder=\"Your name\" value={userName}\r\n                   onChange={(e) => {\r\n                       setUserName(e.target.value)\r\n                   }}/>\r\n            <input type=\"text\" placeholder=\"Room id\" value={roomId}\r\n                   onChange={(e) => {\r\n                       setRoomId(e.target.value)\r\n                   }}/>\r\n            <button className=\"btn btn-success\" onClick={onLoginClick} disabled={isLoading}>\r\n                {isLoading ? \"Joining...\" : \"Join\"}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JoinBlock\r\n","import io from 'socket.io-client'\r\n\r\nconst socket = io()\r\nexport default socket","import React, {useEffect, useRef, useState} from \"react\";\r\nimport socket from \"../socket\";\r\n\r\nconst Chat = ({userName, roomId, users, messages, addMessage}) => {\r\n    const [textValue, setTextValue] = useState('')\r\n    const messageRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        messageRef.current.scrollTo(0, 99999999)\r\n    }, [messages])\r\n\r\n    const onSendMessage = () => {\r\n        if (textValue) {\r\n            socket.emit('ROOM:NEW_MESSAGE', {\r\n                roomId,\r\n                userName,\r\n                text: textValue\r\n            })\r\n            addMessage({userName, text: textValue})\r\n            setTextValue('')\r\n        }\r\n    }\r\n\r\n    const onKeyPress = event => {\r\n        if (event.key === 'Enter') {\r\n            onSendMessage()\r\n            setTextValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat-users\">\r\n                <b>Online ({users.length}):</b>\r\n                <ul>\r\n                    {\r\n                        users.map((user, index) => <li className={user.name ===\r\n                        userName ? \"user-i\" : \"\"} key={index}>{user.name}</li>)\r\n                    }\r\n                </ul>\r\n            </div>\r\n            <div className=\"chat-messages\">\r\n                <b className=\"room-title\">Room: {roomId}</b>\r\n                <div className=\"messages\" ref={messageRef}>\r\n                    {\r\n                        messages.map((message, index) => {\r\n                            return <div className={\"message\" +\r\n                            (message.userName === userName ? \" my-message\" : \"\")} key={index}>\r\n                                <p>{message.text}</p>\r\n                                <div>\r\n                                    <span>{message.userName}</span>\r\n                                </div>\r\n                            </div>\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"form\">\r\n                    <textarea className=\"form-control\"\r\n                              value={textValue}\r\n                              onChange={(e) => setTextValue(e.target.value !== '\\n'\r\n                                  ? e.target.value : '')}\r\n                              onKeyPress={onKeyPress}\r\n                    />\r\n                    <button className=\"btn btn-primary\" onClick={onSendMessage}>Send\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","export default (state, action) => {\r\n    switch (action.type) {\r\n        case 'JOINED':\r\n            return {\r\n                ...state,\r\n                joined: true,\r\n                roomId: action.payload.roomId,\r\n                userName: action.payload.userName\r\n            }\r\n        case 'SET_DATA':\r\n            return {\r\n                ...state,\r\n                users: action.payload.users,\r\n                messages: action.payload.messages\r\n            }\r\n        case 'SET_USERS':\r\n            return {\r\n                ...state,\r\n                users: action.payload\r\n            }\r\n        case 'SET_MESSAGE':\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, action.payload]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, {useEffect, useReducer} from 'react';\nimport './App.css';\nimport JoinBlock from \"./components/JoinBlock\";\nimport Chat from \"./components/Chat\";\nimport reducer from \"./reducer\";\nimport socket from \"./socket\";\nimport axios from 'axios'\n\nconst App = () => {\n    const [state, dispatch] = useReducer(reducer, {\n        joined: false,\n        roomId: null,\n        userName: null,\n        users: [],\n        messages: []\n    })\n\n    const onLogin = async (obj) => {\n        dispatch({type: 'JOINED', payload: obj})\n        socket.emit('ROOM:JOIN', obj)\n        const {data} = await axios.get(`/rooms/${obj.roomId}`)\n        console.log(data.messages)\n        dispatch({type: 'SET_DATA', payload: {users: data.users, messages: data.messages}})\n    }\n\n    // const addMessage = (message) => {\n    //     console.log(message)\n    // }\n\n    const setUsers = (users) => {\n        dispatch({type: 'SET_USERS', payload: users})\n    }\n\n    const addMessage = (message) => {\n        dispatch({type: 'SET_MESSAGE', payload: message})\n    }\n\n    useEffect(() => {\n        socket.on('ROOM:SET_USERS', (users) => setUsers(users))\n        socket.on('ROOM:NEW_MESSAGE', (message) => addMessage(message))\n    }, [])\n\n    return (\n        <div className=\"App\">\n            {!state.joined ? <JoinBlock onLogin={onLogin}/> :\n                <Chat {...state} addMessage={addMessage}/>}\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}